#!/bin/bash

# Description:
#   Lint all-the-things.

set -o errexit
set -o nounset

function ensure_dependency() {
	command -v "${1}" >/dev/null 2>&1 || {
		echo >&2 "Please install ${1} before using this script. Exiting..."
		return 1
	}
}

function ensure_dependencies() {
	ensure_dependency checkmake
	ensure_dependency hadolint
	ensure_dependency markdownlint
	ensure_dependency misspell
	ensure_dependency shellcheck
	ensure_dependency shfmt
}

function find_files() {
	find . -type f -not -path '*/\.git/*' "$@"
}

function find_other_shellscripts() {
	find_files -not -name '*.sh' | xargs -r file --mime-type | grep -oP '[^:]+(?=:\s+text/x-shellscript)'
}

function lint() {
	# Keep track of exit statuses, to either succeed or fail as a whole:
	set +o errexit
	local failures=0
	trap 'failures=$((failures+1))' ERR

	find_files -name 'Makefile' | xargs -r checkmake
	find_files -name 'Dockerfile' | xargs -r hadolint
	find_files -name '*.md' | xargs -r markdownlint
	find_files | xargs -r misspell

	for f in $(find_files -name '*.sh'); do
		shellcheck "${f}"
		shfmt -d "${f}"
		shexec "${f}"
	done

	for f in $(find_other_shellscripts); do
		shellcheck "${f}"
		shfmt -d "${f}"
		shexec "${f}"
	done

	set -o errexit
	if ((failures == 0)); then
		return 0
	else
		echo >&2 "${failures} failures."
		return 1
	fi
}

function main() {
	ensure_dependencies
	lint
}

main
